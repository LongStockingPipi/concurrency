死锁

发生在并发中，互不相让。

死锁在不同的系统中影响是不同的，这取决于系统对死锁的处理能力：
    数据库中：检测并放弃事务；
    JVM：无法自动处理，死锁的发生几率不高，但是危害极大，且压力测试无法找出潜在的死锁；

发生死锁的四个必要条件：
    1. 互斥条件：资源不共享，同一时间只能有一个线程持有；
    2. 请求于保持条件：请求其他资源的同时不释放已经获取的资源；
    3. 不剥夺条件：不会有其他因素强制剥夺已持有的资源（数据库利用这点解决死锁）；
    4. 循环等待：请求方向形成环路；

 检测死锁：
    1. 使用命令行jstack
    2. 使用工具类ThreadMXBean

避免死锁的方法：